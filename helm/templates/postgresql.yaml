{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thumbnail-service.fullname" . }}-postgresql
  labels:
    {{- include "thumbnail-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  serviceName: {{ include "thumbnail-service.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "thumbnail-service.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "thumbnail-service.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: postgresql
        image: postgres:15
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 999
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingSecret | default (printf "%s-secret" (include "thumbnail-service.fullname" .)) }}
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingSecret | default (printf "%s-secret" (include "thumbnail-service.fullname" .)) }}
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          requests:
            memory: 256Mi
            cpu: 250m
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
  {{- if not .Values.postgresql.persistence.enabled }}
      volumes:
      - name: postgresql-data
        emptyDir: {}
  {{- end }}
{{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
      labels:
        {{- include "thumbnail-service.labels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}
      {{- if .Values.postgresql.persistence.storageClass }}
      storageClassName: {{ .Values.postgresql.persistence.storageClass }}
      {{- end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "thumbnail-service.fullname" . }}-postgresql
  labels:
    {{- include "thumbnail-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for StatefulSet
  ports:
  - port: 5432
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    {{- include "thumbnail-service.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
{{- end }}
